name: TA-Lib conda distribution

on:
  workflow_dispatch

jobs:
  build_wheels:
    name: py${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
#        os: [ macos-latest, windows-latest ]
        python: [ '3.7', '3.8', '3.9' , '3.10']
        arch: [x64]

    steps:
      - name: Set Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          xcode-version: latest-stable

      - name: Check macos.sdk
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          xcode-select --print-path
          xcode-select --print-path | ls
          xcrun --show-sdk-path
          xcrun --show-sdk-path | ls

      - name: Checkout zipline-reloaded
        uses: actions/checkout@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup miniconda3
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          mamba-version: "*"
          python-version: ${{ matrix.python }}
          activate-environment: recipe
          channels: conda-forge, defaults, anaconda

      - name: conda install
        shell: bash -l {0}
        run: |
          conda activate recipe
          conda clean --all
          mamba install -n recipe boa -c conda-forge
          mamba install -n recipe conda-verify anaconda-client

      - name: conda build
        shell: bash -l {0}
        run: conda mambabuild --output-folder . --python ${{ matrix.python }} conda/ta-lib/

      - name: store macos result
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          path: osx-64/*.tar.bz2

      - name: store linux result
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          path: linux-64/*.tar.bz2

      - name: store windows result
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          path: win-64/*.tar.bz2

      - name: upload ${{ matrix.os }} result to anaconcda
        env:
          OS: ${{ matrix.os }}
        run: |
          if [ "$OS" == "ubuntu-latest" ] ; then
            anaconda upload -l main -u ml4t linux-64/*.tar.bz2
          else
            if [ "$OS" == "macos-latest" ] ; then
              anaconda upload -l main -u ml4t osx-64/*.tar.bz2
           else
              anaconda upload -l main -u ml4t win-64/*.tar.bz2
            fi
          fi
