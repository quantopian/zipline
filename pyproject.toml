[project]
name = 'zipline-reloaded'
description = 'A Pythonic backtester for trading algorithms'
readme = 'README.md'
dynamic = ["version"]

authors = [
    { name = 'Quantopian Inc' },
    { email = 'pm@ml4trading.io' }
]
maintainers = [
    { name = 'Stefan Jansen' },
    { email = 'pm@ml4trading.io' }
]

classifiers = [
    'Development Status :: 4 - Beta',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Operating System :: OS Independent',
    'Intended Audience :: Science/Research',
    'Topic :: Office/Business :: Financial :: Investment',
    'Topic :: Scientific/Engineering :: Information Analysis',
    'Topic :: System :: Distributed Computing'
]

license = { file = "LICENSE" }

requires-python = '>=3.8'
dependencies = [
    'alembic >=0.7.7',
    'bcolz-zipline >=1.2.6',
    'bottleneck >=1.0.0',
    'click >=4.0.0',
    'empyrical-reloaded >=0.5.7',
    'h5py >=2.7.1', # currently requires installation from source for Python 3.11
    'intervaltree >=2.1.0',
    'iso3166 >=2.1.1',
    'iso4217 >=1.6.20180829',
    'lru-dict >=1.1.4',
    'multipledispatch >=0.6.0',
    'networkx >=2.0',
    'numexpr >=2.6.1',
    'numpy >=1.14.5',
    'pandas >=2.0',
    'patsy >=0.4.0',
    'python-dateutil >=2.4.2',
    'python-interface >=1.5.3',
    'pytz >=2018.5',
    'requests >=2.9.1',
    'scipy >=0.17.1',
    'six >=1.10.0',
    'sqlalchemy >=2',
    'statsmodels >=0.6.1',
    'ta-lib >=0.4.09',
    'tables >=3.4.3',
    'toolz >=0.8.2',
    'exchange-calendars >=4.2.4'
]

[project.urls]
homepage = 'https://ml4trading.io'
repository = 'https://github.com/stefan-jansen/zipline-reloaded'
documentation = 'https://zipline.ml4trading.io'

[build-system]
requires = [
    'setuptools>=42.0.0',
    "setuptools_scm[toml]>=6.2",
    'wheel>=0.36.0',
    'Cython>=0.29.21,<3',
    'oldest-supported-numpy; python_version>="3.8"',
]
build-backend = 'setuptools.build_meta'

[project.optional-dependencies]
test = [
    'tox',
    'pytest>=7.2.0',
    'pytest-cov >=3.0.0',
    'pytest-xdist >=2.5.0',
    'pytest-timeout >=1.4.2',
    'parameterized >=0.6.1',
    'testfixtures >=4.1.2',
    'flake8 >=3.9.1',
    'matplotlib >=1.5.3',
    'responses >=0.9.0',
    'pandas-datareader >=0.2.1',
    'click <8.1.0',
    'coverage',
    'pytest-rerunfailures',
    # the following are required to run tests using PostgreSQL instead of SQLite
    #    'psycopg2',
    #    'pytest-postgresql ==3.1.3'
]
dev = [
    'flake8 >=3.9.1',
    'black',
    'pre-commit >=2.12.1',
    'Cython>=0.29.21,<3',
]
docs = [
    'Cython',
    'Sphinx >=1.3.2',
    'numpydoc >=0.5.0',
    'sphinx-autobuild >=0.6.0',
    'pydata-sphinx-theme',
    'sphinx_markdown_tables',
    'm2r2'

]

[project.scripts]
zipline = 'zipline.__main__:main'

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ['src']
exclude = ['tests*']

[tool.setuptools_scm]
write_to = "src/zipline/_version.py"
version_scheme = 'guess-next-dev'
local_scheme = 'dirty-tag'

[tool.setuptools.package-data]
"*" = ["*.pyi", "*.pyx", "*.pxi", "*.pxd"]

[tool.pytest.ini_options]
testpaths = 'tests'
addopts = '-v'
filterwarnings = 'ignore::DeprecationWarning:pandas_datareader.compat'

[tool.cibuildwheel]
test-extras = "test"
test-command = "pytest -x --reruns 5 {package}/tests"
build-verbosity = 3
environment = "GITHUB_ACTIONS=true"

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64", "universal2"]
test-skip = ["*universal2:arm64"]

[tool.cibuildwheel.linux]
archs = ["auto64"]
skip = "*musllinux*"

[tool.cibuildwheel.windows]
test-command = 'pytest -k "not daily_returns_is_special_case_of_returns" --reruns 5 {package}/tests'

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.hg
  | _build
  | build
  | dist
  | setup.py
)
'''

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310,311}-pandas{2}
isolated_build = True
skip_missing_interpreters = True
minversion = 3.23.0

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
usedevelop = True
setenv =
    MPLBACKEND = Agg

changedir = tmp
extras = test
deps =
    pandas2: pandas>=2.0

commands =
    pytest -n 4 --reruns 5 --cov={toxinidir}/src --cov-report term  --cov-report=xml --cov-report=html:htmlcov {toxinidir}/tests
"""
